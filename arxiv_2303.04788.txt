0. Abstruct

量子力学の定石は、量子状態に対してユニタリー変換のみを課しており、これは量子機械学習アルゴリズムにとって厳しい制限である。
最近、量子アルゴリズムに非線形性を導入するために、量子活性化関数を近似する量子スプライン（QSplines）が提案されている。
しかし、QSplinesはHHLをサブルーチンとして利用するため、正しく実装するためには耐故障性を持つ量子コンピュータが必要となる。
本研究では、一般化ハイブリッド量子スプライン(GHQSplines)を提案する。
GHQSplinesは、非線形量子活性化関数をハイブリッド量子計算を用いて近似する新しい手法である。
GHQSplinesは、オリジナルのQSplinesが量子ハードウェアの面で要求していた高度な要求を克服し、近い将来の量子コンピュータを用いて実装することが可能である。
さらに、提案手法は非線形近似のための柔軟な問題表現に依存しており、既存の量子ニューラルネットワークアーキテクチャに組み込むのに適している。
さらに、Pennylaneを用いたGHQSplinesの実用的な実装を提供し、我々のモデルがフィッティングの質においてオリジナルのQSplinesを上回ることを示す。

1. Introduction

量子コンピュータにおいて非線形活性化関数を近似する能力は、量子機械学習アルゴリズムの可能性を最大限に引き出すために不可欠である。
最近、量子スプライン(QSplines)[1]は、Bスプラインのパラメトライゼーション[2]を採用し、スパース性が一定で、
各ローカル区間にフィットする多項式の次数に依存するブロックデザイン行列を持つ線形方程式系を定義しています。
具体的には、一連のノットξ1, ξ2, - - , ξT が与えられると、導出可能性の制約なしに、各区間[ξk, ξk+1]k=1,--- ,T -1に直線がフィッティングされる。

式(1)


ここで、y?kはk番目の区間[ξk, ξk+1]における関数評価を表し、βksはスプライン係数、S(2K)×(2K)はブロック対角行列であり、
各ブロックSkは入力の対応する基底展開を表す。QSplinesのアルゴリズムは、式(1)のBスプライン定式化を考慮し、
非線形関数を近似するために量子計算を用いて実装される。特に、計算は3つのステップで実行される。
まず、HHL[3]がk番目の区間のスプライン係数｜βk?を計算する。第2に、｜βk?は、スワップテスト[4]による量子干渉を介して、
k番目の区間の入力を符号化した量子状態｜xk?と相互作用する。第三に、 ｜fk ?が測定され、ykを得るために後処理される。
Qスプラインは、量子状態に対するユニタリー演算の制限を克服することができますが、HHLをサブルーチンとして使用するには、
エラー訂正された膨大な数の量子ビットを実行する必要があるため、その適用範囲は非常に限られています。
さらに、現在の定式化では、最終的な量子状態はスワップテスト[5]を用いて得られる。
これは、非線形活性化関数の値が量子状態の振幅に直接エンコードされず、計算するための後処理ステップが必要であることを意味する。
これらの要因により、QSplinesは、限られたノイズの多い量子ビット上で動作する現在の量子ニューラルネットワークのモデルで採用することが制限されています。

GHQSplinesはQSplines[1]の問題定式化を採用し，量子線形ソルバーとしてVQLS[6]を用い，スワップテストの代わりに量子ドット積[7]を用いる．
GHQSplinesは、量子線形ソルバーとしてVQLS[6]を用い、スワップテストの代わりに量子ドット積[7]を用いたQSplines[1]の問題定式化を採用しています。
このようなアプローチの利点は次のとおりです。第一に、VQLSを使用することで、近い将来の量子技術を使用してモデルを実行することができます。
第二に、量子ドット積はスワップテストよりも計算効率が高く、後処理が不要である。さらに、この新しい定式化により、
任意の非線形活性化関数に対するエンドツーエンドの量子ルーチンを得ることができ、既存の量子ニューラルネットワークのサブルーチンとして採用することができる。


2 Generalized Hybrid Quantum Splines

QSplinesとVQSplinesのオリジナルの定式化は、ブロック対角Bスプライン行列に依存しており、問題全体を独立して解くことができるK個の部分問題に分解することができる。
しかし、この方法では、量子ニューラルネットワークに量子活性化関数を埋め込むために必要な、非線形関数を完全量子的に推定することはできません。
このため、我々は、Bスプラインの一般的な定式化に依存し、問題分解を行うことなく、1つの量子回路で非線形関数の値を推定できる新しいアプローチである、
一般化ハイブリッド量子スプライン（GHQSplines）を提案する。
Bスプラインの再帰的定義[2]とノットリストξ = [ξ1, ..., ξi , ξi+1, ..., ξT ]を用いた関連基底展開が与えられれば、
入力X = {x1, ..., xK}が与えられた観測値Y = {y1, ..., yK}を用いて非線形関数fを推定することができる。
この場合、活性化関数Yの推定値、行列S、スプライン係数βの関係を記述する線形方程式系は以下のようになる：

式(2)

ここでdはBスプラインの次数、Tはノットの数、l = T - d - 1である。
それにもかかわらず、線形連立方程式を解くためにVQLS（またはHHL）を採用するためには、基底展開行列Sはエルミート行列でなければならず、
したがって正方かつ非特異行列でなければならない。
GHQSplines定式化では、行列Sをエルミート、すなわちK = l = T - 2とし、量子線形ソルバーを採用して最適なパラメータセット｜β? 2を求める。
各区間(すなわちd = 1)で線形関数をフィッティングすると仮定すると、GHQSplinesの線形システムは次のようになる：


式(3)

これは次のような量子一次方程式系を導く：


式(4)


ここで、 ｜β?と ｜Y ?は、ベクトルYとβを振幅にエンコードする2つの量子状態である。
重要なことは、量子状態 ｜β? と ｜Y ? の正規化制約が、?Y ｜Y ? = ? = 1 となるようにターゲット変数の値を再スケーリングすることを課すことです。

特に量子線形ソルバーとしてのVQLSに着目すると、式(4)の線形システムのサイズはKとなり、最適な係数を求めるのに必要な量子ビット数が求められます。
正確には、VQLSはベクトルを量子状態として符号化する必要があるため、量子ビット数はノット数Kに対して対数スケーリングし、
これは曲線のフィッティングの質に直接関係します（Kが大きいほどフィッティングが良くなります）。この入力数に対する指数関数的なスケーリングは、
量子活性化関数の他の量子的アプローチ[8]の量子ビット数が入力の大きさに対して線形にスケーリングするのと比較して、
大きな改善となります。式(2)の線形システムが与えられると、GHQSplinesは2つのステップで進行する。まず、係数 ｜β ′ ?Pe_27E9 がVQLS（またはHHL）を用いて生成されます：

式(５)


したがって、量子状態 ｜β ′ ? は、量子内積によってxの基底展開を表す ｜x ′ ? と干渉を介して相互作用する。
GHQスプラインの場合、VQLS回路はn + 1量子ビットを必要とし、K = 2nはノットの数である。したがって、ハダマルド検定[9]では、
演算子(V (θ),A,U)を実装するためにn個の量子ビットを使用し、アンシラ量子ビットのために1個を使用します。さらに、d = 1の場合、
VQLSの量子回路を効率的に定義するために、量子ゲートの観点から行列S（式(1)）を分解することができる対角ブロック行列に行き着きます。
具体的には、各区間に対して独立に作用し、k番目の行列分解を以下のように定義することができる：

式(６)

この方法により、S行列を効率的に分解し、VQLSに必要な量子ゲートの線形結合を得ることができる（[6]）。
演算子Uは、振幅エンコード状態準備によって実現されます[10]。それでも、Yの正規化は必要である。
この新しい定式化により、特異な線形システムを解き、Ansatzを一度だけ実行することで、全てのスプライン係数βを一意の量子状態にエンコードすることができます。
その後、この状態を用いて行列Sのk行目との内積を計算し（ルーチンBiを通してエンコード）、Y?を記述するy?k推定値を返します。GHQSplinesのワークフローを図1に示す。


2.1 Evaluation

GHQSplinesを実装し、3つの非線形活性化関数(sigmoid, elu, relu)と正弦関数を近似する。
入力特徴量と非線形活性化関数の値は量子状態の振幅にエンコードされる必要があるため、関数は区間[0, 1]で正規化される。
モデル間の公平な比較を行うために、正規化平均2乗誤差（NRMSE）を使用する：

式(７)

NMRSEは、対象変数のスケールやノットの数に依存しないロバストな比較を可能にする。
従って、GHQSplinesとQSplinesの元の定式化を公平に比較することができる。
GHQSplinesの実験的評価を各関数に対して行い、4量子ビット実装の結果を図2に示します。
GHQSplinesはターゲット関数を過大評価する傾向がわずかに見られる。
とはいえ、この手法は、特に活性化関数の場合、曲線の非線形性を捉えることができます。
表1は、NRMSEの観点からのモデルの結果と、オリジナルのQSplines関数との比較である。
提案手法は、両手法がテストされた3つの非線形活性化関数において、オリジナルのQSplinesを凌駕していることがわかる。


3 Conclusion

量子機械学習（QML）は最近ますます注目を集めており、量子計算能力と変分アルゴリズムなどの新しいアルゴリズムモデルを活用することで、
様々なアプリケーションに影響を与えることが期待されている。
完全な量子ニューラルネットワークを構築する上での大きな問題の1つは、量子状態に対するユニタリー、つまり線形演算の限界である。
本研究では、パラメトリック量子回路を用いて、量子活性化関数の非線形近似を行う。
特に、フォールト・トレラント量子計算の文脈で実装されるQSplinesの効率的なバージョンを提示することにより、
量子計算における単位性の制約を回避することが可能であることを示した。GHQSplinesはQSplinesの変分アプローチとして定式化され、議論される。

 この新しい定式化の利点は、スプライン行列の構造に関して一般化できることにある。
 GHQスプラインは、新しい基底展開行列の定式化を採用し、問題の分解を回避し、1つの線形システムとノット数に対して対数スケールの量子ビット数で、
 エンドツーエンドで行列反転の問題に取り組むことを可能にします。
 さらに、GHQSplinesは、量子活性化関数に対する既存の量子的アプローチと比較して、必要な量子ビット数に関してより効率的である。
 実験の結果、GHQSplinesはQSplinesを凌駕し、実際に非線形性を捉えることができることが示された。
 将来的には、GHQスプラインを既存の量子ニューラルネットワーク[11, 12, 13]のサブルーチンとして組み込み、その能力を最大限に活用する予定である。

